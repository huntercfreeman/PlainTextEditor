@using Fluxor.Blazor.Web.Components
@using Microsoft.AspNetCore.Components.Web.Virtualization

@inherits FluxorComponent

@if (PlainTextEditorSelector.Value is null)
{
    <div>PlainTextEditorSelector.Value is null</div>
}
else
{
    <div class="rte_plain-text-editor-wrapping">
        <div>
            Font Size: @(PlainTextEditorSelector.Value.RichTextEditorOptions.FontSizeInPixels)px
        </div>

        
        
        @*<span id="@ActiveRowPositionMarker"
              class="rte_visually-hidden rte_unselectable rte_active-row-position-marker"
              style="position: absolute; @InputFocusTrapTopStyleCss">
        </span>*@

        <div id="@PlainTextEditorDisplayId"
             class="rte_plain-text-editor-display @IsFocusedCssClass"
             style="@GetStyleCss()"
             @ref="_plainTextEditor"
             @onclick="FocusPlainTextEditorOnClick"
             @onkeydown:preventDefault="true"
             @onkeydown="OnKeyDown"
             @onfocusin="OnFocusIn"
             @onfocusout="OnFocusOut"
             tabindex="-1">
            
            <span id="@ActiveRowPositionMarker"
                  class="rte_active-row-position-marker"
                  style="height: 50px; width: 100%; background-color: aqua; opacity: 0.4; position: absolute; @InputFocusTrapTopStyleCss">
            </span>

            <CascadingValue Value="PlainTextEditorKey">
                <CascadingValue Value="_isFocused">
                    <CascadingValue Name="CurrentRowIndex" Value="PlainTextEditorSelector.Value.CurrentRowIndex">
                        <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                            @{
                                var mostDigitsInARowNumber = PlainTextEditorSelector.Value.List.Count.ToString().Length;

                                // Ensure reference to PlainTextEditorSelector does
                                // not change while looping over rows
                                // by making a local reference to it.
                                var currentPlainTextEditorSelector = PlainTextEditorSelector.Value;

                                <Virtualize @ref="_rowVirtualizeComponent" ItemsProvider="RowItemsProvider" Context="rowTuple" ItemSize="50">
                                    <CascadingValue Name="RowIndex" Value="rowTuple.Index">
                                        <PlainTextEditorRowDisplay @key="rowTuple.PlainTextEditorRow.Key"
                                                                   PlainTextEditorRow="rowTuple.PlainTextEditorRow"
                                                                   MostDigitsInARowNumber="mostDigitsInARowNumber"/>
                                    </CascadingValue>
                                </Virtualize>
                            }
                        </CascadingValue>
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </div>
    </div>
}