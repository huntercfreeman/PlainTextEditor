@using Fluxor.Blazor.Web.Components
@using Microsoft.AspNetCore.Components.Web.Virtualization

@inherits FluxorComponent

@if (PlainTextEditorSelector.Value is null)
{
    <div>PlainTextEditorSelector.Value is null</div>
}
else
{
    <div class="rte_plain-text-editor-wrapping">
        <div>
            Font Size: @(PlainTextEditorSelector.Value.RichTextEditorOptions.FontSizeInPixels)px
        </div>

        <input @ref="_inputFocusTrap"
               @onkeydown:preventDefault="true"
               @onkeydown="OnKeyDown"
               @onfocusin="OnFocusIn"
               @onfocusout="OnFocusOut"
               id="@InputFocusTrapId"
               class="rte_visually-hidden rte_unselectable rte_focus-trap"
               style="position: absolute; @InputFocusTrapTopStyleCss" />

        <div id="@PlainTextEditorDisplayId"
         class="rte_plain-text-editor-display @IsFocusedCssClass"
         style="@GetStyleCss()"
         @onclick="FocusInputFocusTrapOnClick"
         @onscroll="OnScroll"
         tabindex="-1">

            

            

            <CascadingValue Value="PlainTextEditorKey">
                <CascadingValue Value="_isFocused">
                    <CascadingValue Name="CurrentRowIndex" Value="PlainTextEditorSelector.Value.CurrentRowIndex">
                        <CascadingValue Name="ActiveRowId" Value="ActiveRowId">
                            @{
                                var mostDigitsInARowNumber = PlainTextEditorSelector.Value.Array.Length.ToString().Length;

                                // Ensure reference to PlainTextEditorSelector does
                                // not change while looping over rows
                                // by making a local reference to it.
                                var currentPlainTextEditorSelector = PlainTextEditorSelector.Value;

                                <Virtualize @ref="_rowVirtualizeComponent" ItemsProvider="RowItemsProvider" Context="rowTuple" ItemSize="50">
                                    <CascadingValue Name="RowIndex" Value="rowTuple.Index">
                                        <PlainTextEditorRowDisplay @key="rowTuple.PlainTextEditorRow.Key"
                                                                   PlainTextEditorRow="rowTuple.PlainTextEditorRow"
                                                                   MostDigitsInARowNumber="mostDigitsInARowNumber" />
                                    </CascadingValue>
                                </Virtualize>

                                //for (int i = 0; i < currentPlainTextEditorSelector.Array.Length; i++)
                                //{
                                //    var rowIndex = i;

                                //    var rowKey = currentPlainTextEditorSelector.Array[rowIndex];
                                //    var rowValue = currentPlainTextEditorSelector.Map[rowKey];

                                        
                                //}
                        }
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </CascadingValue>
    </div>
</div>
}
